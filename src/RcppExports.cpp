// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// tauTest
List tauTest(NumericVector arr1, NumericVector arr2, int length);
RcppExport SEXP _gemmR_tauTest(SEXP arr1SEXP, SEXP arr2SEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type arr1(arr1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type arr2(arr2SEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(tauTest(arr1, arr2, length));
    return rcpp_result_gen;
END_RCPP
}
// gemmFitRcppI
List gemmFitRcppI(double n, NumericMatrix betas, NumericMatrix data, double p, NumericVector kCor, CharacterVector correction, bool isTauB);
RcppExport SEXP _gemmR_gemmFitRcppI(SEXP nSEXP, SEXP betasSEXP, SEXP dataSEXP, SEXP pSEXP, SEXP kCorSEXP, SEXP correctionSEXP, SEXP isTauBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type kCor(kCorSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type correction(correctionSEXP);
    Rcpp::traits::input_parameter< bool >::type isTauB(isTauBSEXP);
    rcpp_result_gen = Rcpp::wrap(gemmFitRcppI(n, betas, data, p, kCor, correction, isTauB));
    return rcpp_result_gen;
END_RCPP
}
// genAlg
NumericMatrix genAlg(NumericMatrix metricbeta, int nbeta, int nsuperelites, int p, int gens, NumericMatrix bestmodels, bool seedmetric);
RcppExport SEXP _gemmR_genAlg(SEXP metricbetaSEXP, SEXP nbetaSEXP, SEXP nsuperelitesSEXP, SEXP pSEXP, SEXP gensSEXP, SEXP bestmodelsSEXP, SEXP seedmetricSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type metricbeta(metricbetaSEXP);
    Rcpp::traits::input_parameter< int >::type nbeta(nbetaSEXP);
    Rcpp::traits::input_parameter< int >::type nsuperelites(nsuperelitesSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type gens(gensSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bestmodels(bestmodelsSEXP);
    Rcpp::traits::input_parameter< bool >::type seedmetric(seedmetricSEXP);
    rcpp_result_gen = Rcpp::wrap(genAlg(metricbeta, nbeta, nsuperelites, p, gens, bestmodels, seedmetric));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gemmR_tauTest", (DL_FUNC) &_gemmR_tauTest, 3},
    {"_gemmR_gemmFitRcppI", (DL_FUNC) &_gemmR_gemmFitRcppI, 7},
    {"_gemmR_genAlg", (DL_FUNC) &_gemmR_genAlg, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_gemmR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
